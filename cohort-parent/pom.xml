<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ibm.cohort</groupId>
	<artifactId>cohort-parent</artifactId>
	<version>${revision}</version>

	<packaging>pom</packaging>

	<modules>
		<module>../build</module>
		<module>../cohort-engine</module>
		<module>../cohort-cli</module>
		<module>../cohort-engine-api</module>
		<module>../cohort-engine-api-web</module>
		<module>../cohort-util</module>
		<module>../tests</module>
		<module>../reports</module>
		<module>../cohort-engine-distribution</module>
	</modules>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<properties>
		<base-version>0.0.1</base-version>
		<revision>${base-version}-SNAPSHOT</revision>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<whBldsdkVer>1.8</whBldsdkVer>
		<maven.compiler.source>${whBldsdkVer}</maven.compiler.source>
		<maven.compiler.target>${whBldsdkVer}</maven.compiler.target>

		<cqframework.version>1.5.1-SNAPSHOT</cqframework.version>
		<engine.version>1.5.1-SNAPSHOT</engine.version>
		<ruler.version>0.4.0</ruler.version>

		<jackson.version>2.10.1</jackson.version>
		<jacoco.version>0.8.6</jacoco.version>

		<!-- Default values for the jacoco-maven-plugin reports -->
		<cohort.jacoco.classRatio>0.80</cohort.jacoco.classRatio>
		<cohort.jacoco.instructionRatio>0.70</cohort.jacoco.instructionRatio>
		<cohort.jacoco.methodRatio>0.70</cohort.jacoco.methodRatio>
		<cohort.jacoco.branchRatio>0.60</cohort.jacoco.branchRatio>
		<cohort.jacoco.complexityRatio>0.60</cohort.jacoco.complexityRatio>
		<cohort.jacoco.lineRatio>0.70</cohort.jacoco.lineRatio>
		<cohort.jacoco.haltOnFailure>true</cohort.jacoco.haltOnFailure>

		<sonar.scanner.force-deprecated-java-version>true</sonar.scanner.force-deprecated-java-version>
		<sonar.projectKey>Alvearie_quality-measure-and-cohort-service</sonar.projectKey>
		<sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>
		<sonar.organization>alvearie</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		
		<!-- Properties added for REST projects-->
		<whCompanyName>IBM Corp</whCompanyName>

		<whBldVer>${project.version}</whBldVer>
		<watson.buildtools.version>1.27</watson.buildtools.version>
		<hapi.fhir.version>5.2.0</hapi.fhir.version>

		<srcjavaDir>src/main/java</srcjavaDir>
		<srcjavaTestDir>src/test/java</srcjavaTestDir>
		<srcjavadocDir>${srcjavaDir}</srcjavadocDir>
		<srcjavadocTestDir>${srcjavaTestDir}</srcjavadocTestDir>
		<outDir>${project.build.directory}</outDir>
		<outDirName>target</outDirName>
		<!-- .war related properties -->
		<whBldCheckWebXml>true</whBldCheckWebXml>
		<whBldwarSourceDirectory>src/main/webapp</whBldwarSourceDirectory>
		<whBldwebXml>src/main/webapp/WEB-INF/web.xml</whBldwebXml>
		<whBldwebappDirectory>${outDir}/WebContent</whBldwebappDirectory>
		<whBldWarpackagingIncludes>**</whBldWarpackagingIncludes>
		<whBldWarpackagingExcludes></whBldWarpackagingExcludes>
		<!-- MANIFEST related properties -->
		<mfBuilt-By>IBM Corp</mfBuilt-By>
		<mfSpecification-Title>${project.name}</mfSpecification-Title>
		<mfSpecification-Version>${mf.ver.label}</mfSpecification-Version>
		<mfSpecification-Vendor>${whCompanyName}</mfSpecification-Vendor>
		<mfCopyrightStr>(C) Copyright ${whCompanyName}. 2020, 2021 SPDX-License-Identifier: Apache-2.0</mfCopyrightStr>

		<!-- Service specifics -->
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<whcs.base.utils.base-version>0.0.1</whcs.base.utils.base-version>
		<whcs.base.utils.version>${whcs.base.utils.base-version}-SNAPSHOT</whcs.base.utils.version>
	</properties>

	<scm>
		<url>https://github.com/Alvearie/quality-measure-and-cohort-service</url>
		<connection>scm:git:git@github.com:Alvearie/quality-measure-and-cohort-service.git</connection>
		<developerConnection>scm:git:git@github.com:Alvearie/quality-measure-and-cohort-service.git</developerConnection>
	</scm>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub Packages</name>
			<url>https://maven.pkg.github.com/Alvearie/quality-measure-and-cohort-service</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>cql.releases</id>
			<name>CQL Framework and Engine Releases</name>
			<url>https://oss.sonatype.org/content/repositories/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>cql.snapshots</id>
			<name>CQL Framework and Engine Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>github</id>
			<name>GitHub Alvearie Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/Alvearie/rest-service-framework</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>hapi-fhir-client</artifactId>
				<version>${hapi.fhir.version}</version>
			</dependency>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>hapi-fhir-base</artifactId>
				<version>${hapi.fhir.version}</version>
			</dependency>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>hapi-fhir-converter</artifactId>
				<version>${hapi.fhir.version}</version>
			</dependency>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>org.hl7.fhir.convertors</artifactId>
				<version>${hapi.fhir.version}</version>
			</dependency>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>org.hl7.fhir.validation</artifactId>
				<version>${hapi.fhir.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.14</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.8.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.11</version>
			</dependency>
			<dependency>
				<groupId>info.cqframework</groupId>
				<artifactId>cql</artifactId>
				<version>${cqframework.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cqframework</groupId>
				<artifactId>model</artifactId>
				<version>${cqframework.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cqframework</groupId>
				<artifactId>elm</artifactId>
				<version>${cqframework.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cqframework</groupId>
				<artifactId>quick</artifactId>
				<version>${cqframework.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cqframework</groupId>
				<artifactId>qdm</artifactId>
				<version>${cqframework.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cqframework</groupId>
				<artifactId>cql-to-elm</artifactId>
				<version>${cqframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opencds.cqf.cql</groupId>
				<artifactId>engine</artifactId>
				<version>${engine.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opencds.cqf.cql</groupId>
				<artifactId>engine.fhir</artifactId>
				<version>${engine.version}</version>
			</dependency>
			<dependency>
				<groupId>org.opencds.cqf</groupId>
				<artifactId>common</artifactId>
				<version>${ruler.version}</version>
				<exclusions>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
					</exclusion>
					<exclusion>
						<groupId>ca.uhn.hapi.fhir</groupId>
						<artifactId>hapi-fhir-jpaserver-base</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.opencds.cqf</groupId>
				<artifactId>r4</artifactId>
				<version>${ruler.version}</version>
				<exclusions>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
					</exclusion>
					<exclusion>
						<groupId>ca.uhn.hapi.fhir</groupId>
						<artifactId>hapi-fhir-jpaserver-base</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlets</artifactId>
				<version>9.4.30.v20200611</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.13</version>
			</dependency>

			<dependency>
				<groupId>com.github.tomakehurst</groupId>
				<artifactId>wiremock-jre8</artifactId>
				<version>2.27.2</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>ant-contrib</groupId>
				<artifactId>ant-contrib</artifactId>
				<version>1.0b3</version>
			</dependency>
			<dependency>
				<groupId>com.ibm.watson.health.services</groupId>
				<artifactId>service-base-os</artifactId>
				<version>${whcs.base.utils.version}</version>
			</dependency>
			<dependency>
				<groupId>com.ibm.watson.health.services</groupId>
				<artifactId>service-base-os</artifactId>
				<version>${whcs.base.utils.version}</version>
				<classifier>tests</classifier>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.jayway.restassured</groupId>
				<artifactId>rest-assured</artifactId>
				<version>2.9.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.jcabi</groupId>
				<artifactId>jcabi-matchers</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.takari.junit</groupId>
				<artifactId>takari-cpsuite</artifactId>
				<version>1.2.7</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>4.0.1</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>net.javacrumbs.json-unit</groupId>
				<artifactId>json-unit</artifactId>
				<version>1.16.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.ant</groupId>
				<artifactId>ant-junit</artifactId>
				<version>1.10.8</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.ant</groupId>
				<artifactId>ant-junit4</artifactId>
				<version>1.10.8</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.3</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy</artifactId>
				<version>2.4.8</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-json</artifactId>
				<version>2.4.8</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-xml</artifactId>
				<version>2.4.8</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>xmlunit</groupId>
				<artifactId>xmlunit</artifactId>
				<version>1.6</version>
				<scope>test</scope>
			</dependency>
			
		</dependencies>
	</dependencyManagement>

	<build>
		<defaultGoal>package</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/.gitignore</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<excludes>
					<exclude>**/.gitignore</exclude>
				</excludes>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>1.2.2</version>
					<configuration>
						<updatePomFile>true</updatePomFile>
						<flattenMode>ossrh</flattenMode>
					</configuration>
					<executions>
						<execution>
							<id>flatten</id>
							<phase>process-resources</phase>
							<goals>
								<goal>flatten</goal>
							</goals>
						</execution>
						<execution>
							<id>flatten.clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.9.1</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>templating-maven-plugin</artifactId>
					<version>1.0.0</version>
				</plugin>
				<!-- Might be needed for runVT.xml -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.6.1</version>
					<configuration>
						<excludeDefaultDirectories>true</excludeDefaultDirectories>
						<filesets>
							<fileset>
								<directory>target</directory>
								<includes>
									<include>**/*</include>
								</includes>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
<!-- 				The Resources Plugin handles the copying of project resources to the output directory. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
				</plugin>
<!-- 				The Install Plugin is used during the install phase to add artifact(s) to the local repository. The Install Plugin uses the information in the POM (groupId, artifactId, version) to determine the proper location for the artifact within the local repository. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
<!-- 				The deploy plugin is primarily used during the deploy phase, to add your artifact(s) to a remote repository for sharing with other developers and projects. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
<!-- 				Used to add copyright stuff to jars -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<!-- The Source Plugin creates a jar archive of the source files of the current project. The jar file is, by default, created in the project's target directory. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<warSourceDirectory>${whBldwarSourceDirectory}</warSourceDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.surefire</groupId>
					<artifactId>surefire-junit47</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.surefire</groupId>
					<artifactId>maven-surefire-common</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.surefire</groupId>
					<artifactId>surefire-junit4</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
<!-- 				The Failsafe Plugin is designed to run integration tests while the Surefire Plugin is designed to run unit tests.  -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.19.1</version>
				</plugin>				
<!-- 				The Enforcer plugin provides goals to control certain environmental constraints such as Maven version, JDK version and OS family along with many more built-in rules and user created rules. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0-M3</version>
				</plugin>				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
					<configuration>
						<redirectTestOutputToFile>true</redirectTestOutputToFile>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>3.0.0-M5</version>
						</dependency>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>maven-surefire-common</artifactId>
							<version>3.0.0-M5</version>
						</dependency>
					</dependencies>
				</plugin>
<!-- 				The Javadoc Plugin uses the Javadoc tool to generate javadocs for the specified project.  -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
				</plugin>
				<!-- Used by the cohort-engine-api-web project to set build properties in ServiceBuildConstants at build time-->
				<plugin>
					<groupId>org.codehaus.gmaven</groupId>
					<artifactId>groovy-maven-plugin</artifactId>
					<version>2.0</version>
				</plugin>
				<!-- The plugin provides 2 goals to help execute system and Java programs. -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.4.0</version>
					<configuration>
						<killAfter>-1</killAfter>
					</configuration>
				</plugin>
				<!-- Used by the cohort-engine-api-web project to set build properties in ServiceBuildConstants at build time-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2,)</versionRange>
										<goals>
											<goal>unpack-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.gmavenplus</groupId>
										<artifactId>gmavenplus-plugin</artifactId>
										<versionRange>[1.5,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>flatten-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>flatten</goal>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.gmavenplus</groupId>
					<artifactId>gmavenplus-plugin</artifactId>
					<version>1.5</version>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-all</artifactId>
							<version>2.4.8</version>
							<scope>runtime</scope>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<rulesets>
						<ruleset>com/ibm/cohort/build/pmd-ruleset.xml</ruleset>
					</rulesets>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.ibm.cohort</groupId>
						<artifactId>build</artifactId>
						<version>${revision}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<source>${whBldsdkVer}</source>
							<target>${whBldsdkVer}</target>
							<debug>true</debug>
							<encoding>UTF-8</encoding>
							<fork>true</fork>
							<maxmem>2048m</maxmem>
							<meminitial>128m</meminitial>
						</configuration>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<source>${whBldsdkVer}</source>
							<target>${whBldsdkVer}</target>
							<debug>true</debug>
							<encoding>UTF-8</encoding>
							<fork>true</fork>
							<maxmem>2048m</maxmem>
							<meminitial>128m</meminitial>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skipIfEmpty>true</skipIfEmpty>
					<archive>
						<manifestEntries>
							<Copyright>${mfCopyrightStr}</Copyright>
							<Built-By>${mfBuilt-By}</Built-By>
							<Specification-Title>${mfSpecification-Title}</Specification-Title>
							<Specification-Version>${mfSpecification-Version}</Specification-Version>
							<Specification-Vendor>${mfSpecification-Vendor}</Specification-Vendor>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>${whBldCheckWebXml}</failOnMissingWebXml>
					<webXml>${whBldwebXml}</webXml>
					<warSourceDirectory>${whBldwarSourceDirectory}</warSourceDirectory>
					<packagingIncludes>${whBldWarpackagingIncludes}</packagingIncludes>
					<packagingExcludes>${whBldWarpackagingExcludes}</packagingExcludes>
					<webappDirectory>${whBldwebappDirectory}</webappDirectory>
					<archive>
						<manifestEntries>
							<Copyright>${mfCopyrightStr}</Copyright>
							<Built-By>${mfBuilt-By}</Built-By>
							<Specification-Title>${mfSpecification-Title}</Specification-Title>
							<Specification-Version>${mfSpecification-Version}</Specification-Version>
							<Specification-Vendor>${mfSpecification-Vendor}</Specification-Vendor>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>expand-unittest-dependencies</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeClassifiers>dist,experiment</includeClassifiers>
							<outputDirectory>${project.build.directory}/unittest_home</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<forkedProcessTimeoutInSeconds>600</forkedProcessTimeoutInSeconds>
					<skipTests>${skip.unit.tests}</skipTests>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<testFailureIgnore>${it.ignore.fail}</testFailureIgnore>
							<redirectTestOutputToFile>true</redirectTestOutputToFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<rulesets>
						<ruleset>com/ibm/cohort/build/pmd-ruleset.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<reportSets>
					<reportSet>
						<id>html</id>
						<configuration>
							<doctitle>API for ${project.name} ${project.version}</doctitle>
							<windowtitle>API for ${project.name} ${project.version}</windowtitle>
							<sourcepath>${srcjavadocDir}</sourcepath>
							<show>public</show>
							<splitindex>true</splitindex>
						</configuration>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>test-html</id>
						<configuration>
							<testDoctitle>Test API for ${project.name}/test
								${project.version}</testDoctitle>
							<testWindowtitle>Test API for ${project.name}/test
								${project.version}</testWindowtitle>
							<sourcepath>${srcjavadocTestDir}</sourcepath>
							<show>public</show>
							<splitindex>true</splitindex>
						</configuration>
						<reports>
							<report>test-javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>release</id>
			<properties>
				<revision>${base-version}</revision>
				<whcs.base.utils.version>${whcs.base.utils.base-version}</whcs.base.utils.version>
			</properties>
		</profile>
		<profile>
			<id>jacoco</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Likely, this is overkill, but it works, so I'm sticking with it 
						See https://developer.okta.com/blog/2018/05/02/testing-spring-boot-angular-components -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>prepare-agent-integration</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-check</id>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<rule>
											<element>BUNDLE</element>
											<excludes>
												<!-- this project contains generated placeholder pojos for the REST service 
												and it is not worth it to write tests for these since they are all just 
												getter/setter type methods. If more complex classes are added, the decision
												to exclude this project should be revisited 
												<exclude>*cohort-engine-api*</exclude>-->
											</excludes>
											<limits>
												<limit>
													<counter>CLASS</counter>
													<value>COVEREDRATIO</value>
													<minimum>${cohort.jacoco.classRatio}</minimum>
												</limit>
												<limit>
													<counter>INSTRUCTION</counter>
													<value>COVEREDRATIO</value>
													<minimum>${cohort.jacoco.instructionRatio}</minimum>
												</limit>
												<limit>
													<counter>METHOD</counter>
													<value>COVEREDRATIO</value>
													<minimum>${cohort.jacoco.methodRatio}</minimum>
												</limit>
												<limit>
													<counter>BRANCH</counter>
													<value>COVEREDRATIO</value>
													<minimum>${cohort.jacoco.branchRatio}</minimum>
												</limit>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>${cohort.jacoco.lineRatio}</minimum>
												</limit>
												<limit>
													<counter>COMPLEXITY</counter>
													<value>COVEREDRATIO</value>
													<minimum>${cohort.jacoco.complexityRatio}</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
									<haltOnFailure>${cohort.jacoco.haltOnFailure}</haltOnFailure>
								</configuration>
							</execution>
							<execution>
								<id>jacoco-report</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
									<goal>report-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-merge-report</id>
								<phase>verify</phase>
								<goals>
									<goal>merge</goal>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-merge.exec</dataFile>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-merge</outputDirectory>
									<destFile>${project.build.directory}/jacoco-merge.exec</destFile>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<reportSets>
							<reportSet>
								<reports>
									<!-- select non-aggregate reports -->
									<report>report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<!-- Added <projectName>-bld so that versions-maven-plugin:set works for 
			changing Maven version. -->
		<!-- ex: cd <projectName>-parent; mvn -DversionsSet=true versions:set -DnewVersion=1.2.0.20170101.0310 
			-DgenerateBackupPoms=false -->
		<profile>
			<id>mavenVersionsSet</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>versionsSet</name>
					<value>true</value>
				</property>
			</activation>
			<modules>
				<module>../cohort-engine-bld</module>
			</modules>
		</profile>
	</profiles>

</project>
