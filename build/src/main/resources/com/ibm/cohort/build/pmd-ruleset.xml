<?xml version="1.0"?>
<!--  ************************************** -->
<!--  (C) Copyright IBM Corp. 2021, 2021     -->
<!--  SPDX-License-Identifier: Apache-2.0    -->
<!--  ************************************** -->
<ruleset name="Quality Measure and Cohort Engine PMD ruleset"
	xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

	<description>
		This ruleset defines the PMD rules for the entire cohort and
		quality measure project.
	</description>

	<rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace" />
	<rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP" />
	<rule ref="category/java/bestpractices.xml/CheckResultSet" />
	<rule ref="category/java/bestpractices.xml/LooseCoupling" />
	<rule ref="category/java/bestpractices.xml/MissingOverride" />
	<rule ref="category/java/bestpractices.xml/PreserveStackTrace" />
	<rule ref="category/java/bestpractices.xml/SystemPrintln" />
	<rule ref="category/java/bestpractices.xml/UseTryWithResources" />
	<rule ref="category/java/bestpractices.xml/UnusedImports" />
	<rule ref="category/java/bestpractices.xml/UnusedFormalParameter" />
	<rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
	<rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
	<rule ref="category/java/bestpractices.xml/UnusedPrivateMethod" />

	<rule ref="category/java/codestyle.xml/DontImportJavaLang" />
	<rule ref="category/java/codestyle.xml/DuplicateImports" />
	<rule ref="category/java/codestyle.xml/PackageCase" />
	<rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName" />

	<rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop" />
	<rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
	<rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation" />
	<rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators" />
	<rule ref="category/java/errorprone.xml/AvoidUsingOctalValues" />
	<rule ref="category/java/errorprone.xml/BrokenNullCheck" />
	<rule ref="category/java/errorprone.xml/CompareObjectsWithEquals" />
	<rule ref="category/java/errorprone.xml/EmptyCatchBlock" />
	<rule ref="category/java/errorprone.xml/EmptyFinallyBlock" />
	<rule ref="category/java/errorprone.xml/ImportFromSamePackage" />
	<rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />


	<rule name="UseCollectionIsEmpty"
		  language="java"
		  since="3.9"
		  message="Substitute calls to size() == 0 (or size() != 0, size() &gt; 0, size() &lt; 1) with calls to CollectionUtils.isEmpty()"
		  class="net.sourceforge.pmd.lang.java.rule.bestpractices.UseCollectionIsEmptyRule"
		  externalInfoUrl="${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#usecollectionisempty">
		<description>
			The isEmpty() method on java.util.Collection is provided to determine if a collection has any elements.
			Comparing the value of size() to 0 does not convey intent as well as the isEmpty() method.
			Use CollectionUtils.isEmpty or CollectionUtils.isNotEmpty to more appropriately convey intent.
		</description>
		<priority>3</priority>
		<example>
			<![CDATA[
public class Foo {
    void good() {
        List foo = getList();
        if (CollectionUtils.isEmpty(foo)) {
            // blah
        }
    }
    void bad() {
        List foo = getList();
        if (foo.size() == 0) {
            // blah
        }
    }
}
]]>
		</example>
	</rule>

	<!-- See https://pmd.github.io/pmd-6.21.0/pmd_rules_java.html for additional 
		rule options -->
</ruleset>
